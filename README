%% File README
 	
\subsection{Licensing}
The full software license for DMRG++ version 2.0.0 
can be found in
file LICENSE in the root directory of the code.
DMRG++ is a free and open source implementation of the 
DMRG algorithm. You are welcome to use it and publish data 
obtained with DMRG++. If you do, please cite this
work (see next subsection).

\subsection{How To Cite This Work}\label{subsec:citeme}

\begin{Verbatim}
@article{re:alvarez09,
author="G. Alvarez",
title="The density matrix renormalization group for strongly correlated electron
systems: A generic implementation",
journal="Computer Physics Communications",
volume="180",
pages="1572",
year="2009"}
\end{Verbatim}
And also:
\begin{Verbatim}
@article{
re:webDmrgPlusPlus,
Author = {G. Alvarez},
Title = {DMRG++ Website},
Publisher = {\url{http://www.ornl.gov/~gz1/dmrgPlusPlus}} }
\end{Verbatim}

\section{Building and Running DMRG++}
\subsection{Required Software}
\begin{enumerate}
\item (required) GNU C++
\item (required) The LAPACK library.
This library is available for most platforms.
The configure.pl script will ask for the LDFLAGS variable 
to pass to the compiler/linker. If the linux platform was
chosen the default/suggested LDFLAGS will include -llapack.
If the osx platform was chosen the default/suggested LDFLAGS will
include  -framework Accelerate.
For other platforms the appropriate linker flags must be given.
More information on LAPACK is here: \url{http://netlib.org/lapack/}
\item (required) PsimagLite. This is here \url{https://github.com/g1257/PsimagLite/}.
You can do \verb=git clone https://github.com/g1257/PsimagLite.git= in a separate directory
outside of the DMRG++ distribution. \verb=configure.pl= will ask you where you put it.
\item (optional) make or gmake (only needed to use the Makefile)
\item (optional) perl (only needed to run the configure.pl script)
\end{enumerate}

\subsection{Quick Start}
To Build DMRG++:
\begin{verbatim}
cd src
perl configure.pl
(please answer questions regarding model, etc)
make
\end{verbatim}

To Run DMRG++:
\begin{verbatim}
./dmrg input.inp
\end{verbatim}
Sample input files can be found under \verb!TestSuite/inputs/!.

The files created by \cppFile{configure.pl} are the following:

\cppFile{main.cpp}
\cppFile{configure.pl} will create the file \cppFile{main.cpp}
which contains the entry point (function int main()) for DMRG++,
according to the answers to questions given.

\cppFile{Makefile}:
\cppFile{configure.pl} will create the file \cppFile{Makefile}
according to the answers to questions given. 
In the Makefile, LDFLAGS must contain the linker flags to 
link with the LAPACK library. Defaults provided 
 automatically by configure.pl should work in most cases.
If MPI is not selected (serial code) then the compiler will be chosen to be g++.
Other compilers may work but only the GNU C++ compiler, g++, was tested.
If MPI is selected then the compiler will be chosen to be mpicxx, which 
is usually a wrapper script around g++ to take care of linking with MPI libraries 
and to include MPI headers. Depending on your MPI installation you might need to
change the name of this script.

\cppFile{observe.cpp}
Source driver for the post-processing of results.

\cppFile{input.inp}:
\cppFile{configure.pl} will create the file \cppFile{input.inp}
according to the answers to questions given.
The input file (see TestSuite/inputs for samples, and \S\ref{sec:inputfile} for format documentation) 
can be used as input to run the DMRG++ program, in the following way:
for serial code:
\begin{Verbatim}
./dmrg input.inp
\end{Verbatim}
for MPI code: (actual command will vary according to MPI Installation):
\begin{Verbatim}
mpirun ./dmrg input.inp
\end{Verbatim}

 	
